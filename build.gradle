/**
 * Gradle Build file for OpenDial (based on a previous file written by Ingmar Steiner).
 */


apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
mainClassName = 'opendial.DialogueSystem'
version = '1.4'


repositories {
    flatDir {
    	dirs file("${projectDir}/lib")
    }
    maven {
        url "https://jcenter.bintray.com"
    }
    maven {
        url 'https://oss.jfrog.org/artifactory/repo'
    }
    maven {
    	url 'https://oss.sonatype.org/content/repositories/repositories/snapshots'
    }
}


sourceSets {
	main {
		java {
			srcDirs 'src'
	    }
	} 
	test {
	    java {
			srcDirs 'test'
			exclude 'domains/**'
	    }
	}
}



dependencies {
	compile group:'org.apache.httpcomponents', name:'httpclient', version:'4.3+'
	compile group:'net.java.balloontip', name:'balloontip', version:'1.2+'
	compile group:'org.json', name:'org.json', version:'2.0'
	compile group:'org.jfree', name:'jfreechart', version:'1.0.19+'
	compile group:'net.sf.jung', name:'jung-graph-impl', version:'2.0.1'
	compile group:'net.sf.jung', name:'jung-visualization', version:'2.0.1'
	compile name: 'att-codekit'
	compile name: 'exp4j'
	testCompile group:'junit', name: 'junit',  version: '4.+'
 	compile group: 'de.dfki.mary', name: 'marytts-runtime', version: '5.1.1'
 	compile group: 'de.dfki.mary', name: 'voice-cmu-slt-hsmm', version: '5.1.1'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.2'
    compile group: 'edu.cmu.sphinx', name: 'sphinx4-core', version:'1.0-SNAPSHOT'
    compile group: 'org.maltparser', name: 'maltparser', version:'1.8.1'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version:'3.5.2'
  }



tasks.withType(JavaCompile) {
	sourceCompatibility = '1.8'
	options.encoding = 'UTF-8'
}


run {
    systemProperties System.getProperties()
	systemProperty 'file.encoding', 'UTF-8'
 	standardInput = System.in
}

test {
  	testLogging {
		exceptionFormat = 'full'
    }
  	systemProperty 'file.encoding', 'UTF-8'
}

task compile (type: Copy) {
	dependsOn distTar
	from tarTree(distTar.archivePath)
	into '.'
	doLast {
        delete("scripts")
        delete("lib")
        file("${project.name}-${project.version}/bin").renameTo(file("scripts"))
        file("${project.name}-${project.version}/lib").renameTo(file("lib"))
        delete("${project.name}-${project.version}/")
    }
}


task copyResources(type: Copy) {
from 'resources'
into 'build/resources/main/resources'
}

eclipse {
	classpath {
		defaultOutputDir = sourceSets.main.output.classesDir
	}
}

jar {
dependsOn copyResources
    manifest {
		attributes('Main-Class': project.mainClassName)
    }
}
